// Ejemplo de cÃ³mo usar el UserContext en cualquier componente
"use client";
import { useUser } from "@/context/UserContext";

export default function ExampleComponent() {
  // Â¡Mira quÃ© fÃ¡cil! Solo una lÃ­nea para acceder a TODOS los datos del usuario
  const { user, isAuthenticated, isLoading, logout } = useUser();

  // Mostrar loading si estÃ¡ cargando
  if (isLoading) {
    return <div>Cargando...</div>;
  }

  // Si no estÃ¡ autenticado, mostrar mensaje
  if (!isAuthenticated) {
    return <div>Por favor, inicia sesiÃ³n</div>;
  }

  // Si estÃ¡ autenticado, usar los datos del usuario
  return (
    <div>
      <h1>Â¡Hola, {user?.username}!</h1>
      <p>Email: {user?.email}</p>
      <p>Nombre completo: {user?.first_name} {user?.last_name}</p>
      
      <button onClick={logout}>
        Cerrar sesiÃ³n
      </button>
    </div>
  );
}

// Â¡Y ya estÃ¡! No mÃ¡s:
// - useEffect para obtener el token
// - useState para manejar estados de carga
// - Validaciones repetitivas
// - LÃ³gica duplicada
// 
// El Context maneja TODO por ti. Â¡QuÃ© concepto tan revolucionario! ğŸ™„
